version: "3"

networks:
  for_test_network:
    driver: bridge

services:
  nginx:
    container_name: ${APP_NAME}_nginx
    build:
      context: ./nginx
    env_file:
      - .env
    ports:
      - ${HTTP_PORT}:80
      - ${HTTPS_PORT}:443
    volumes:
      - ${WORKING_DIR}:/var/www
      - ./nginx:/etc/nginx/conf.d
    working_dir: /var/www
    links:
      - web
    networks:
      - for_test_network
    restart: unless-stopped

  web:
    container_name: ${APP_NAME}_web
    build:
      context: ./web
      args:
        - PHP_VERSION=${PHP_VERSION}
    env_file:
      - .env
    volumes:
      - ${WORKING_DIR}:/var/www
      - ./web/php.ini://usr/local/etc/php/php.ini
    working_dir: /var/www
    links:
      - mysql
    networks:
      - for_test_network
    restart: unless-stopped

  mysql:
    container_name: ${APP_NAME}_mysql
    env_file:
      - .env
    image: mysql:${MYSQL_VERSION}
    ports:
      - ${DB_PORT}:3306
    volumes:
       - ${PATH_DATA}/mysql:/var/lib/mysql
    environment:
      MYSQL_DATABASE: ${DB_DATABASE_DOCKER}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD_DOCKER}
    networks:
      - for_test_network
    restart: unless-stopped

#  phpmyadmin:
#    container_name: ${APP_NAME}_phpmyadmin
#    env_file:
#      - .env
#    depends_on:
#      - mysql
#    image: phpmyadmin/phpmyadmin
#    ports:
#      - ${PHPMYADMIN_PORT}:80
#    environment:
#      UPLOAD_LIMIT: 1G
#      PMA_HOST: mysql
#      PMA_PORT: 3306
#      PMA_ARBITRARY: 1
#    networks:
#      - for_test_network
#    restart: unless-stopped

  adminer:
    container_name: ${APP_NAME}_adminer
    image: adminer
    depends_on:
      - mysql
    environment:
      ADMINER_PLUGINS: "tables-filter tinymce dump-zip"
      ADMINER_DEFAULT_SERVER: "mysql"
    networks:
      - for_test_network
    ports:
      - ${ADMINER_PORT}:8080
    restart: unless-stopped
